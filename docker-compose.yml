version: '3.8'

services:
  # DBCLI主应用
  dbcli:
    build: 
      context: .
      dockerfile: Dockerfile
    image: dbcli:1.0.0
    container_name: dbcli-app
    ports:
      - "${DBCLI_WEB_PORT:-8080}:8080"
    environment:
      - DBCLI_SM4_KEY=${DBCLI_SM4_KEY}
      - JAVA_OPTS=${JAVA_OPTS:--Xms512m -Xmx2g -XX:+UseG1GC}
      - DBCLI_LOG_LEVEL=${DBCLI_LOG_LEVEL:-INFO}
      - TZ=Asia/Shanghai
    volumes:
      - ./configs:/app/configs:ro
      - ./metrics:/app/metrics:ro
      - ./lib:/app/lib:ro
      - dbcli-logs:/app/logs
      - dbcli-reports:/app/reports
      - dbcli-temp:/app/temp
    networks:
      - dbcli-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - prometheus
      - grafana

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: dbcli-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - dbcli-network
    restart: unless-stopped

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: dbcli-grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - dbcli-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # AlertManager告警管理
  alertmanager:
    image: prom/alertmanager:latest
    container_name: dbcli-alertmanager
    ports:
      - "${ALERTMANAGER_PORT:-9093}:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - dbcli-network
    restart: unless-stopped

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: dbcli-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-dbcli123}
    networks:
      - dbcli-network
    restart: unless-stopped
    profiles:
      - cache

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: dbcli-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - dbcli-network
    restart: unless-stopped
    depends_on:
      - dbcli
      - grafana
    profiles:
      - proxy

# 网络配置
networks:
  dbcli-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷配置
volumes:
  dbcli-logs:
    driver: local
  dbcli-reports:
    driver: local
  dbcli-temp:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local
  redis-data:
    driver: local
  nginx-logs:
    driver: local